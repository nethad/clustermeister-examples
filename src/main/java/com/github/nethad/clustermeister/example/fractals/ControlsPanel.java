/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.github.nethad.clustermeister.example.fractals;

import javax.swing.JSpinner;
import javax.swing.JTextField;

/**
 *
 * @author thomas
 */
public class ControlsPanel extends javax.swing.JPanel {
    private final static double CENTER_X_DEFAULT = -0.7D;
    private final static double CENTER_Y_DEFAULT = 0.0D;
    private final static double DIAMETER_DEFAULT = 3.0D;
    private final static String ITERATIONS_DEFAULT = "100";
    
    private AbstractComputeMandelbrot computeMandelbrot;

    /**
     * Creates new form ControlsPanel
     */
    public ControlsPanel() {
        initComponents();
    }
    
    public double getCenterX() {
        return parseNumberFromTextField(centerXTextField);
    }
    
    public void setCenterX(double value) {
        centerXTextField.setText(String.valueOf(value));
    }
    
    public double getCenterY() {
        return parseNumberFromTextField(centerYTextField);
    }
    
    public void setCenterY(double value) {
        centerYTextField.setText(String.valueOf(value));
    }
    
    public double getDiameter() {
        return parseNumberFromTextField(diameterTextField);
    }
    
    public void setDiameter(double value) {
        diameterTextField.setText(String.valueOf(value));
    }
    
    public int getIterations() {
        return parseNumberFromSpinnter(iterationsSpinner);
    }
    
    public void setIterations(int value) {
        iterationsSpinner.setValue(value);
    }
    
    public int getZoomFactor() {
        return parseNumberFromSpinnter(zoomFactorSpinner);
    }

    public void setZoomFactor(int value) {
        zoomFactorSpinner.setValue(value);
    }
    
    public void setComputeMandelBrot(AbstractComputeMandelbrot computeMandelbrot) {
        this.computeMandelbrot = computeMandelbrot;
    }
    
    private double parseNumberFromTextField(JTextField textField) {
        String text = textField.getText();
        try {
            return Double.parseDouble(text);
        } catch (NumberFormatException e) {
            System.err.println("Could not parse text field number: "+text);
        }
        return 0D;
    }
    
       
   private int parseNumberFromSpinnter(JSpinner spinner) {
        String value = spinner.getValue().toString();
        try {
            return Integer.parseInt(value);
        } catch (NumberFormatException e) {
            System.err.println("Could not parse spinner value: "+value);
        }
        return 0;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        resetButton = new javax.swing.JButton();
        computeButton = new javax.swing.JButton();
        centerXTextField = new javax.swing.JTextField();
        centerYTextField = new javax.swing.JTextField();
        diameterTextField = new javax.swing.JTextField();
        iterationsSpinner = new javax.swing.JSpinner();
        zoomFactorSpinner = new javax.swing.JSpinner();
        centerXLabel = new javax.swing.JLabel();
        centerYLabel = new javax.swing.JLabel();
        diameterLabel = new javax.swing.JLabel();
        iterationsLabel = new javax.swing.JLabel();
        zoomFactorLabel = new javax.swing.JLabel();

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        computeButton.setText("Compute");
        computeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computeButtonActionPerformed(evt);
            }
        });

        centerXTextField.setText("-0.7");
        centerXTextField.setBorder(null);

        centerYTextField.setText("0.0");
        centerYTextField.setBorder(null);

        diameterTextField.setText("3.0");
        diameterTextField.setBorder(null);

        iterationsSpinner.setBorder(null);
        iterationsSpinner.setValue(100);

        zoomFactorSpinner.setBorder(null);
        zoomFactorSpinner.setValue(2);

        centerXLabel.setText("center X");

        centerYLabel.setText("center Y");

        diameterLabel.setText("diameter");

        iterationsLabel.setText("iterations");

        zoomFactorLabel.setText("zoom factor");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(computeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(resetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(centerXLabel)
                    .addComponent(centerYLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(centerXTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                    .addComponent(centerYTextField))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(diameterLabel)
                    .addComponent(iterationsLabel))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(iterationsSpinner)
                    .addComponent(diameterTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(zoomFactorLabel)
                .addGap(18, 18, 18)
                .addComponent(zoomFactorSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(119, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(centerXTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(diameterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(centerXLabel)
                    .addComponent(diameterLabel)
                    .addComponent(zoomFactorLabel)
                    .addComponent(zoomFactorSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(computeButton)
                    .addComponent(centerYLabel)
                    .addComponent(centerYTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iterationsLabel)
                    .addComponent(iterationsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(164, 164, 164))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        setCenterX(CENTER_X_DEFAULT);
        setCenterY(CENTER_Y_DEFAULT);
        setDiameter(DIAMETER_DEFAULT);
    }//GEN-LAST:event_resetButtonActionPerformed

    private void computeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computeButtonActionPerformed
        if (computeMandelbrot != null) {
            computeMandelbrot.computePicture();
        }
    }//GEN-LAST:event_computeButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel centerXLabel;
    private javax.swing.JTextField centerXTextField;
    private javax.swing.JLabel centerYLabel;
    private javax.swing.JTextField centerYTextField;
    private javax.swing.JButton computeButton;
    private javax.swing.JLabel diameterLabel;
    private javax.swing.JTextField diameterTextField;
    private javax.swing.JLabel iterationsLabel;
    private javax.swing.JSpinner iterationsSpinner;
    private javax.swing.JButton resetButton;
    private javax.swing.JLabel zoomFactorLabel;
    private javax.swing.JSpinner zoomFactorSpinner;
    // End of variables declaration//GEN-END:variables
}
